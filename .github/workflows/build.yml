name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
      - name: Build executable
      run: |
        pyinstaller app.spec
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: LTC_Timecode_Generator_Windows
        path: dist/LTC_Timecode_Generator.exe
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/LTC_Timecode_Generator.exe
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-source:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Test application
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "import ltc_generator; print('LTC Generator imported successfully')"
    
    - name: Create source archive
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        tar -czf ltc-timecode-generator-source.tar.gz \
          --exclude='.git*' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='build' \
          --exclude='dist' \
          --exclude='*.exe' \
          .
    
    - name: Upload source to release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ltc-timecode-generator-source.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
